start2016-11-03 08:36:47.898976
(True, 26, 'replica detected')
Total time:0.416150093079
Wrote profile results to mainprocess.py.lprof
Timer unit: 1e-06 s

Total time: 0.053594 s
File: extraction.py
Function: basic_rotations at line 61

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    61                                               @profile
    62                                               def basic_rotations(self, image):
    63         1           14     14.0      0.0          center = (self.N * self.number_of_blocks) / 2
    64         1          122    122.0      0.2          rot90 = cv2.warpAffine(image, cv2.getRotationMatrix2D((center, center), 90, 1), \
    65         1         9779   9779.0     18.2                                 (center * 2, center * 2))
    66         1          109    109.0      0.2          rot180 = cv2.warpAffine(image, cv2.getRotationMatrix2D((center, center), 180, 1) \
    67         1         9235   9235.0     17.2                                  , (center * 2, center * 2))
    68         1          131    131.0      0.2          rot270 = cv2.warpAffine(image, cv2.getRotationMatrix2D((center, center), 270, 1) \
    69         1         9730   9730.0     18.2                                  , (center * 2, center * 2))
    70         1         2032   2032.0      3.8          fVertical0 = cv2.flip(image, 0)
    71         1         3805   3805.0      7.1          fHorizontal0 = cv2.flip(image, 1)
    72         1         2505   2505.0      4.7          fVertical90 = cv2.flip(rot90, 0)
    73         1         3903   3903.0      7.3          fHorizontal90 = cv2.flip(rot90, 1)
    74         1         2117   2117.0      4.0          fVertical180 = cv2.flip(rot180, 0)
    75         1         4114   4114.0      7.7          fHorizontal180 = cv2.flip(rot180, 1)
    76         1         2152   2152.0      4.0          fVertical270 = cv2.flip(rot270, 0)
    77         1         3813   3813.0      7.1          fHorizontal270 = cv2.flip(rot270, 1)
    78                                           
    79         1           22     22.0      0.0          return rot90, rot180, rot270, fVertical0, fHorizontal0, fVertical90, fHorizontal90, fVertical180, fHorizontal180, \
    80         1           11     11.0      0.0           fVertical270, fHorizontal270

Total time: 0.15426 s
File: extraction.py
Function: get_fragment at line 82

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    82                                               @profile
    83                                               def get_fragment(self, rot0, rot90, rot180, rot270, fVertical0, fHorizontal0, fVertical90, fHorizontal90, \
    84                                               fVertical180, fHorizontal180, fVertical270, fHorizontal270, x, y, only_rotate):
    85                                           
    86                                           
    87       120         1005      8.4      0.7          if only_rotate == 1:
    88        28         3457    123.5      2.2              lum1 = self.get_average_luminance_of_block(rot0[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
    89        28         3219    115.0      2.1              lum2 = self.get_average_luminance_of_block(rot90[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
    90        28         3026    108.1      2.0              lum3 = self.get_average_luminance_of_block(rot180[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
    91        28         2836    101.3      1.8              lum4 = self.get_average_luminance_of_block(rot270[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
    92        28          439     15.7      0.3              avg_lum = (lum1 + lum2 + lum3 + lum4) / 4
    93                                                       #std_lum = np.std(np.array([lum1, lum2, lum3, lum4]))
    94                                                       
    95        28         3960    141.4      2.6              std_lum = libextraction.calculateSD(np.array([lum1, lum2, lum3, lum4]).ctypes.data_as(c_void_p))
    96                                                       
    97        28          278      9.9      0.2              return avg_lum, std_lum
    98                                           
    99        92          789      8.6      0.5          elif only_rotate == -1:
   100         1          104    104.0      0.1              lum1 = self.get_average_luminance_of_block(rot0[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   101         1            9      9.0      0.0              avg_lum = lum1
   102         1            7      7.0      0.0              std_lum = 0
   103                                                       
   104         1           28     28.0      0.0              return avg_lum, std_lum
   105                                           
   106                                                   else:
   107        91        10567    116.1      6.9              lum1 = self.get_average_luminance_of_block(rot0[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   108        91        10011    110.0      6.5              lum2 = self.get_average_luminance_of_block(rot90[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   109        91         9995    109.8      6.5              lum3 = self.get_average_luminance_of_block(rot180[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   110        91         9906    108.9      6.4              lum4 = self.get_average_luminance_of_block(rot270[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   111        91        10376    114.0      6.7              lum5 = self.get_average_luminance_of_block(fVertical0[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   112        91         9711    106.7      6.3              lum6 = self.get_average_luminance_of_block(fHorizontal0[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   113        91         9628    105.8      6.2              lum7 = self.get_average_luminance_of_block(fVertical90[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   114        91         9518    104.6      6.2              lum8 = self.get_average_luminance_of_block(fHorizontal90[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   115        91         9429    103.6      6.1              lum9 = self.get_average_luminance_of_block(fVertical180[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   116        91         9620    105.7      6.2              lum10 = self.get_average_luminance_of_block(fHorizontal180[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   117        91         9593    105.4      6.2              lum11 = self.get_average_luminance_of_block(fVertical270[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   118        91         9660    106.2      6.3              lum12 = self.get_average_luminance_of_block(fHorizontal270[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   119                                           
   120        91         2112     23.2      1.4              avg_lum = (lum1 + lum2 + lum3 + lum4 + lum5 + lum6 + lum7 + lum8 + lum9 + lum10 + lum11 + lum12) / 12
   121                                           
   122                                                       #std_lum = np.std(np.array([lum1, lum2, lum3, lum4, lum5, lum6, lum7, lum8, lum9, lum10, lum11, lum12]))
   123        91        13998    153.8      9.1              std_lum = libextraction.calculateSD(np.array([lum1, lum2, lum3, lum4]).ctypes.data_as(c_void_p))
   124                                           
   125                                           
   126        91          979     10.8      0.6              return avg_lum, std_lum

Total time: 0.242336 s
File: extraction.py
Function: get_all_fragments at line 128

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   128                                               @profile
   129                                               def get_all_fragments(self):
   130         1           18     18.0      0.0          fragments_list = [[],[]]
   131         1         4290   4290.0      1.8          rot0 = self.get_blocks()
   132                                                   rot90, rot180, rot270, fVertical0, fHorizontal0, fVertical90, fHorizontal90, \
   133         1        54093  54093.0     22.3          fVertical180, fHorizontal180, fVertical270, fHorizontal270 = self.basic_rotations(rot0)
   134         1            8      8.0      0.0          counter_x = 0
   135         1            7      7.0      0.0          counter_y = 0
   136         1           12     12.0      0.0          append_std_lum = fragments_list[0].append
   137         1            9      9.0      0.0          append_avg_lum = fragments_list[1].append
   138       121          898      7.4      0.4          while(counter_x < 14 or counter_y < 14):
   139       120          877      7.3      0.4              if counter_x == 15:
   140        14           95      6.8      0.0                  counter_y += 1
   141        14           92      6.6      0.0                  counter_x = counter_y
   142       120          905      7.5      0.4              if counter_x == counter_y or counter_x == 14:
   143        29          198      6.8      0.1                  if counter_x == 14 and counter_y == 14:
   144         1            9      9.0      0.0                      fragment_time = time.time()
   145         1            8      8.0      0.0                      avg_lum, std_lum = self.get_fragment(rot0, rot90, rot180, rot270, fVertical0, fHorizontal0, fVertical90, fHorizontal90, \
   146         1          258    258.0      0.1      fVertical180, fHorizontal180, fVertical270, fHorizontal270, counter_x, counter_y, -1)
   147         1            9      9.0      0.0                      fragment_end_time = time.time()
   148         1            8      8.0      0.0                      append_std_lum(std_lum)
   149         1            7      7.0      0.0                      append_avg_lum(avg_lum)
   150                                                           else:
   151        28          302     10.8      0.1                      fragment_time = time.time()
   152        28          259      9.2      0.1                      avg_lum, std_lum = self.get_fragment(rot0, rot90, rot180, rot270, fVertical0, fHorizontal0, fVertical90, fHorizontal90, \
   153        28        20682    738.6      8.5      fVertical180, fHorizontal180, fVertical270, fHorizontal270, counter_x, counter_y, 1)
   154        28          279     10.0      0.1                      fragment_end_time = time.time()
   155        28          235      8.4      0.1                      append_std_lum(std_lum)
   156        28          208      7.4      0.1                      append_avg_lum(avg_lum)
   157                                                       else:
   158        91          778      8.5      0.3                  avg_lum, std_lum = self.get_fragment(rot0, rot90, rot180, rot270,fVertical0, fHorizontal0, fVertical90, fHorizontal90, \
   159        91       155301   1706.6     64.1      fVertical180, fHorizontal180, fVertical270, fHorizontal270, counter_x, counter_y, 0)
   160        91          879      9.7      0.4                  append_std_lum(std_lum)
   161        91          709      7.8      0.3                  append_avg_lum(avg_lum)
   162       120          882      7.3      0.4              counter_x += 1
   163         1           21     21.0      0.0          return fragments_list

