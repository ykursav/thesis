start2016-11-02 21:07:43.183849
(False, 124, 'tau1_fail')
Total time:0.705288887024
Wrote profile results to mainprocess.py.lprof
Timer unit: 1e-06 s

Total time: 0.185055 s
File: extraction.py
Function: get_fragment at line 73

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    73                                               @profile
    74                                               def get_fragment(self, rot0, rot90, rot180, rot270, fVertical0, fHorizontal0, fVertical90, fHorizontal90, \
    75                                               fVertical180, fHorizontal180, fVertical270, fHorizontal270, x, y, only_rotate):
    76                                           
    77                                           
    78       120          956      8.0      0.5          if only_rotate == 1:
    79        28         3546    126.6      1.9              lum1 = self.get_average_luminance_of_block(rot0[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
    80        28         3058    109.2      1.7              lum2 = self.get_average_luminance_of_block(rot90[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
    81        28         2928    104.6      1.6              lum3 = self.get_average_luminance_of_block(rot180[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
    82        28         2975    106.2      1.6              lum4 = self.get_average_luminance_of_block(rot270[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
    83        28          444     15.9      0.2              avg_lum = (lum1 + lum2 + lum3 + lum4) / 4
    84        28        12152    434.0      6.6              std_lum = np.std(np.array([lum1, lum2, lum3, lum4]))
    85                                                       
    86        28          269      9.6      0.1              return avg_lum, std_lum
    87                                           
    88        92          691      7.5      0.4          elif only_rotate == -1:
    89         1          106    106.0      0.1              lum1 = self.get_average_luminance_of_block(rot0[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
    90         1            8      8.0      0.0              avg_lum = lum1
    91         1            7      7.0      0.0              std_lum = 0
    92                                                       
    93         1            7      7.0      0.0              return avg_lum, std_lum
    94                                           
    95                                                   else:
    96        91        10965    120.5      5.9              lum1 = self.get_average_luminance_of_block(rot0[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
    97        91         9925    109.1      5.4              lum2 = self.get_average_luminance_of_block(rot90[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
    98        91         9603    105.5      5.2              lum3 = self.get_average_luminance_of_block(rot180[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
    99        91         9434    103.7      5.1              lum4 = self.get_average_luminance_of_block(rot270[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   100        91         9594    105.4      5.2              lum5 = self.get_average_luminance_of_block(fVertical0[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   101        91         9336    102.6      5.0              lum6 = self.get_average_luminance_of_block(fHorizontal0[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   102        91         9399    103.3      5.1              lum7 = self.get_average_luminance_of_block(fVertical90[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   103        91         9353    102.8      5.1              lum8 = self.get_average_luminance_of_block(fHorizontal90[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   104        91         9289    102.1      5.0              lum9 = self.get_average_luminance_of_block(fVertical180[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   105        91         9259    101.7      5.0              lum10 = self.get_average_luminance_of_block(fHorizontal180[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   106        91         9310    102.3      5.0              lum11 = self.get_average_luminance_of_block(fVertical270[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   107        91         9350    102.7      5.1              lum12 = self.get_average_luminance_of_block(fHorizontal270[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   108                                           
   109        91         2099     23.1      1.1              avg_lum = (lum1 + lum2 + lum3 + lum4 + lum5 + lum6 + lum7 + lum8 + lum9 + lum10 + lum11 + lum12) / 12
   110                                           
   111        91        40120    440.9     21.7              std_lum = np.std(np.array([lum1, lum2, lum3, lum4, lum5, lum6, lum7, lum8, lum9, lum10, lum11, lum12]))
   112                                           
   113                                           
   114        91          872      9.6      0.5              return avg_lum, std_lum

Total time: 0.26754 s
File: extraction.py
Function: get_all_fragments at line 116

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   116                                               @profile
   117                                               def get_all_fragments(self):
   118         1           20     20.0      0.0          fragments_list = [[],[]]
   119         1         3447   3447.0      1.3          rot0 = self.get_blocks()
   120                                                   rot90, rot180, rot270, fVertical0, fHorizontal0, fVertical90, fHorizontal90, \
   121         1        50564  50564.0     18.9          fVertical180, fHorizontal180, fVertical270, fHorizontal270 = self.basic_rotations(rot0)
   122         1           18     18.0      0.0          counter_x = 0
   123         1            7      7.0      0.0          counter_y = 0
   124         1           12     12.0      0.0          append_std_lum = fragments_list[0].append
   125         1           10     10.0      0.0          append_avg_lum = fragments_list[1].append
   126       121          871      7.2      0.3          while(counter_x < 14 or counter_y < 14):
   127       120          815      6.8      0.3              if counter_x == 15:
   128        14           91      6.5      0.0                  counter_y += 1
   129        14           89      6.4      0.0                  counter_x = counter_y
   130       120          873      7.3      0.3              if counter_x == counter_y or counter_x == 14:
   131        29          199      6.9      0.1                  if counter_x == 14 and counter_y == 14:
   132         1            8      8.0      0.0                      fragment_time = time.time()
   133         1            9      9.0      0.0                      avg_lum, std_lum = self.get_fragment(rot0, rot90, rot180, rot270, fVertical0, fHorizontal0, fVertical90, fHorizontal90, \
   134         1          236    236.0      0.1      fVertical180, fHorizontal180, fVertical270, fHorizontal270, counter_x, counter_y, -1)
   135         1            9      9.0      0.0                      fragment_end_time = time.time()
   136         1            7      7.0      0.0                      append_std_lum(std_lum)
   137         1            8      8.0      0.0                      append_avg_lum(avg_lum)
   138                                                           else:
   139        28          259      9.2      0.1                      fragment_time = time.time()
   140        28          248      8.9      0.1                      avg_lum, std_lum = self.get_fragment(rot0, rot90, rot180, rot270, fVertical0, fHorizontal0, fVertical90, fHorizontal90, \
   141        28        28869   1031.0     10.8      fVertical180, fHorizontal180, fVertical270, fHorizontal270, counter_x, counter_y, 1)
   142        28          282     10.1      0.1                      fragment_end_time = time.time()
   143        28          224      8.0      0.1                      append_std_lum(std_lum)
   144        28          216      7.7      0.1                      append_avg_lum(avg_lum)
   145                                                       else:
   146        91          822      9.0      0.3                  avg_lum, std_lum = self.get_fragment(rot0, rot90, rot180, rot270,fVertical0, fHorizontal0, fVertical90, fHorizontal90, \
   147        91       176914   1944.1     66.1      fVertical180, fHorizontal180, fVertical270, fHorizontal270, counter_x, counter_y, 0)
   148        91          832      9.1      0.3                  append_std_lum(std_lum)
   149        91          725      8.0      0.3                  append_avg_lum(avg_lum)
   150       120          849      7.1      0.3              counter_x += 1
   151         1            7      7.0      0.0          return fragments_list

