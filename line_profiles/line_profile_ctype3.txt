start2016-11-03 08:18:53.449527
17.27549209
Wrote profile results to mainprocess.py.lprof
Timer unit: 1e-06 s

Total time: 0.001703 s
File: extraction.py
Function: get_fragment at line 82

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    82                                               @profile
    83                                               def get_fragment(self, rot0, rot90, rot180, rot270, fVertical0, fHorizontal0, fVertical90, fHorizontal90, \
    84                                               fVertical180, fHorizontal180, fVertical270, fHorizontal270, x, y, only_rotate):
    85                                           
    86                                           
    87         1           11     11.0      0.6          if only_rotate == 1:
    88         1          388    388.0     22.8              lum1 = self.get_average_luminance_of_block(rot0[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
    89         1          188    188.0     11.0              lum2 = self.get_average_luminance_of_block(rot90[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
    90         1          160    160.0      9.4              lum3 = self.get_average_luminance_of_block(rot180[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
    91         1          143    143.0      8.4              lum4 = self.get_average_luminance_of_block(rot270[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
    92         1           18     18.0      1.1              avg_lum = (lum1 + lum2 + lum3 + lum4) / 4
    93         1          673    673.0     39.5              std_lum = np.std(np.array([lum1, lum2, lum3, lum4]))
    94         1           87     87.0      5.1              print std_lum
    95         1           35     35.0      2.1              print libextraction.calculateSD([lum1, lum2, lum3, lum4].ctypes.data_as(c_void_p))
    96                                                       
    97                                                       return avg_lum, std_lum
    98                                           
    99                                                   elif only_rotate == -1:
   100                                                       lum1 = self.get_average_luminance_of_block(rot0[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   101                                                       avg_lum = lum1
   102                                                       std_lum = 0
   103                                                       
   104                                                       return avg_lum, std_lum
   105                                           
   106                                                   else:
   107                                                       lum1 = self.get_average_luminance_of_block(rot0[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   108                                                       lum2 = self.get_average_luminance_of_block(rot90[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   109                                                       lum3 = self.get_average_luminance_of_block(rot180[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   110                                                       lum4 = self.get_average_luminance_of_block(rot270[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   111                                                       lum5 = self.get_average_luminance_of_block(fVertical0[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   112                                                       lum6 = self.get_average_luminance_of_block(fHorizontal0[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   113                                                       lum7 = self.get_average_luminance_of_block(fVertical90[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   114                                                       lum8 = self.get_average_luminance_of_block(fHorizontal90[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   115                                                       lum9 = self.get_average_luminance_of_block(fVertical180[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   116                                                       lum10 = self.get_average_luminance_of_block(fHorizontal180[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   117                                                       lum11 = self.get_average_luminance_of_block(fVertical270[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   118                                                       lum12 = self.get_average_luminance_of_block(fHorizontal270[y * 8:y * 8 + self.N, x * 8:x * 8 + self.N])
   119                                           
   120                                                       avg_lum = (lum1 + lum2 + lum3 + lum4 + lum5 + lum6 + lum7 + lum8 + lum9 + lum10 + lum11 + lum12) / 12
   121                                           
   122                                                       std_lum = np.std(np.array([lum1, lum2, lum3, lum4, lum5, lum6, lum7, lum8, lum9, lum10, lum11, lum12]))
   123                                           
   124                                           
   125                                                       return avg_lum, std_lum

Total time: 0.056419 s
File: extraction.py
Function: get_all_fragments at line 127

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   127                                               @profile
   128                                               def get_all_fragments(self):
   129         1           19     19.0      0.0          fragments_list = [[],[]]
   130         1         3946   3946.0      7.0          rot0 = self.get_blocks()
   131                                                   rot90, rot180, rot270, fVertical0, fHorizontal0, fVertical90, fHorizontal90, \
   132         1        50422  50422.0     89.4          fVertical180, fHorizontal180, fVertical270, fHorizontal270 = self.basic_rotations(rot0)
   133         1           19     19.0      0.0          counter_x = 0
   134         1            8      8.0      0.0          counter_y = 0
   135         1           19     19.0      0.0          append_std_lum = fragments_list[0].append
   136         1            9      9.0      0.0          append_avg_lum = fragments_list[1].append
   137         1            9      9.0      0.0          while(counter_x < 14 or counter_y < 14):
   138         1            7      7.0      0.0              if counter_x == 15:
   139                                                           counter_y += 1
   140                                                           counter_x = counter_y
   141         1            7      7.0      0.0              if counter_x == counter_y or counter_x == 14:
   142         1            7      7.0      0.0                  if counter_x == 14 and counter_y == 14:
   143                                                               fragment_time = time.time()
   144                                                               avg_lum, std_lum = self.get_fragment(rot0, rot90, rot180, rot270, fVertical0, fHorizontal0, fVertical90, fHorizontal90, \
   145                                               fVertical180, fHorizontal180, fVertical270, fHorizontal270, counter_x, counter_y, -1)
   146                                                               fragment_end_time = time.time()
   147                                                               append_std_lum(std_lum)
   148                                                               append_avg_lum(avg_lum)
   149                                                           else:
   150         1           16     16.0      0.0                      fragment_time = time.time()
   151         1           14     14.0      0.0                      avg_lum, std_lum = self.get_fragment(rot0, rot90, rot180, rot270, fVertical0, fHorizontal0, fVertical90, fHorizontal90, \
   152         1         1917   1917.0      3.4      fVertical180, fHorizontal180, fVertical270, fHorizontal270, counter_x, counter_y, 1)
   153                                                               fragment_end_time = time.time()
   154                                                               append_std_lum(std_lum)
   155                                                               append_avg_lum(avg_lum)
   156                                                       else:
   157                                                           avg_lum, std_lum = self.get_fragment(rot0, rot90, rot180, rot270,fVertical0, fHorizontal0, fVertical90, fHorizontal90, \
   158                                               fVertical180, fHorizontal180, fVertical270, fHorizontal270, counter_x, counter_y, 0)
   159                                                           append_std_lum(std_lum)
   160                                                           append_avg_lum(avg_lum)
   161                                                       counter_x += 1
   162                                                   return fragments_list

